#! /usr/bin/env python
# WAF build script for midori
# This file is licensed under the terms of the expat license, see the file EXPAT.

import Options
import platform

progressive = True
libs = 'M UNIQUE LIBSOUP GMODULE GTHREAD LIBIDN GIO GTK SQLITE ' \
       'LIBNOTIFY WEBKIT LIBXML X11 XSS WS2_32 OPENSSL HILDON HILDON_FM'

if progressive or Options.commands['check']:
    obj = bld.new_task_gen ('cc', 'staticlib')
    obj.target = 'midori-core'
    obj.includes = '.. ../katze . ../toolbars'
    obj.find_sources_in_dirs ('../katze . ../panels ../toolbars', excludes=['main.c'])
    obj.uselib = libs
    obj.add_marshal_file ('marshal.list', 'midori_cclosure_marshal')
    obj.install_path = None
    obj.packages = 'glib-2.0 gio-2.0 gtk+-2.0 libsoup-2.4 webkit-1.0'
    bld.add_group ()

if progressive:
    obj = bld.new_task_gen ('cc', 'program')
    obj.target = 'midori'
    obj.includes = '.. ../katze . ../panels'
    obj.source = './main.c'
    obj.uselib = libs
    obj.uselib_local = 'midori-core'
    if bld.env['WINRC']:
        obj.source += ' ../data/midori.rc'
else:
    obj = bld.new_task_gen ('cc', 'program')
    obj.target = 'midori'
    obj.includes = '.. ../katze . ../panels ../toolbars'
    obj.find_sources_in_dirs ('../katze . ../panels ../toolbars')
    obj.add_marshal_file ('marshal.list', 'midori_cclosure_marshal')
    obj.uselib = libs
    if bld.env['WINRC']:
        obj.source += ' ../data/midori.rc'
